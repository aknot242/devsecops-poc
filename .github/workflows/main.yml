name: DevSecOps Pipeline

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
    ignore-tags:
      - "*"
  workflow_dispatch:

env:
  PY_COLORS: "1"
  AZURE_RESOURCE_GROUP: edgar-rg
  ACR_NAME: aknot242
  AKS_CLUSTER_NAME: edgar-aks-cluster

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    - name: Code Checkout
      uses: actions/checkout@v2

    - name: DotNet Build
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '5.0.x'
    - run: dotnet build -c Release DotNetCoreWebApp/DotNetCoreWebApp.csproj -o {env.DOTNET_ROOT}/app/build   

    - name: DotNet Publish
      run: |
        pwd
        dotnet publish -c Release DotNetCoreWebApp/DotNetCoreWebApp.csproj -o {env.DOTNET_ROOT}/app/build
    
    - name: Azure Login
      uses: azure/login@v1
      with:
       creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Azure Container Registry Login
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.REGISTRY_SERVERNAME }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - name: Build and push App Protect container
      run: |
        cd app-protect
        docker build -t ${{ secrets.REGISTRY_SERVERNAME }}/nap-dotnetcorewebapp:${{ github.sha }} -f NAP-App-Dockerfile .
        docker push ${{ secrets.REGISTRY_SERVERNAME }}/nap-dotnetcorewebapp:${{ github.sha }}

    - name: Build and push DotNet app container
      run: |
        cd DotNetCoreWebApp
        docker build -t ${{ secrets.REGISTRY_SERVERNAME }}/dotnetcorewebapp:${{ github.sha }} .
        docker push ${{ secrets.REGISTRY_SERVERNAME }}/dotnetcorewebapp:${{ github.sha }}

    - name: GitHub Container Scan using Trivy and Dockle
      uses: Azure/container-scan@v0.1
      with:
        image-name: ${{ secrets.REGISTRY_SERVERNAME }}/dotnetcorewebapp:${{ github.sha }}

    # Set the target AKS cluster.
    - uses: Azure/aks-set-context@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
        cluster-name: ${{ env.AKS_CLUSTER_NAME }}
        resource-group: ${{ env.AZURE_RESOURCE_GROUP }}

    - uses: Azure/k8s-deploy@v1.4
      with:
        manifests: |
          manifests/deployment.yml
          manifests/service.yml
        images: |
          ${{ env.ACR_NAME }}.azurecr.io/nap-dotnetcorewebapp:${{ github.sha }}
          aknot242.azurecr.io/dotnetcorewebapp:${{ github.sha }}

    # - name: Selenium - Set up Python 3.9
    #   uses: actions/setup-python@v1
    #   with:
    #     python-version: 3.9

    # - name: Selenium - Install dependencies
    #   run: |
    #     python -m pip install --upgrade pip

    # - name: Selenium - Install SeleniumBase
    #   run: |
    #     pip install seleniumbase

    # - name: Selenium - Install Chrome and Firefox
    #   run: |
    #     sudo apt install google-chrome-stable
    #     sudo apt-get install firefox

    # - name: Selenium - Install chromedriver and geckodriver (Firefox Webdriver)
    #   run: |
    #     seleniumbase install chromedriver
    #     seleniumbase install geckodriver

    # - name: Selenium - Run Chrome Selenium tests
    #   run: |
    #     pytest selenium/full-test.py --browser=chrome --headless -v -s --junit-xml=junit/test-results.xml

    # - name: Selenium - Run Firefox Selenium tests
    #   run: |
    #     pytest selenium/full-test.py --browser=firefox --headless -v -s --junit-xml=junit/test-results.xml

    # - name: DAST - OWASP ZAP Scan
    #   uses: zaproxy/action-full-scan@v0.2.0
    #   with:
    #     target: "http://${{ env.SITE_NAME_STAGING }}.westus2.azurecontainer.io/"
    #     rules_file_name: '.github/zap/rules.tsv'
    #     fail_action: true

    - name: Azure logout
      run: |
        az logout

  # deploy-prod:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:

  #   - name: Code Checkout
  #     uses: actions/checkout@v2

  #   - name: Azure Login
  #     uses: azure/login@v1
  #     with:
  #      creds: ${{ secrets.AZURE_CREDENTIALS }}
    
  #   - name: Azure logout
  #     run: |
  #       az logout
